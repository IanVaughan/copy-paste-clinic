Lesson: replace document text with register text
================================================

    collection = getCollection();
    ^
    process(obstacleToBeRemoved, target);
            ^

We're going to attempt to replace the word 'obstacleToBeRemoved' with the word
'collection'. We'll do it the lazy way: by copying the word 'collection' and
pasting it in the position currently occupied by the word
'obstacleToBeRemoved'.

1. Yank the word 'collection' into the default register by pressing `yiw`
2. Jump to the next location by pressing `<right>`
3. Delete the word 'obstacleToBeRemoved' by pressing `diw`
4. Put the text from the default register by pressing `P`

What happened there? Instead of using the text that we yanked, Vim has pasted
the text that we deleted.

If that's surprising to you, it may be that Vim's terminology is tripping you
up. You see, Vim's delete command is actually more like a cut operation. Not
only does it remove text from the document, it copies it into the default
register.

Try working through steps 1-3 again, but after the `yiw` and `diw` operations,
inspect the contents of the default register by running the command:

    :reg "

The `diw` operation clobbers the text that was written by the `yiw` operation.
That's a bit annoying, but there are several ways that we can get around this
problem.
